"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const process_1 = require("../process");
const errorTypes_1 = require("../errorTypes");
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            // connect to Control
            const anon = new process_1.Process({ displayLog: false, socksPort: 9050, controlPort: 9051, autoTermsAgreement: true });
            try {
                yield anon.start();
            }
            catch (error) {
                if (error instanceof errorTypes_1.AnonRunningError) {
                    yield process_1.Process.killAnonProcess();
                    yield anon.start();
                }
            }
            yield new Promise(resolve => setTimeout(resolve, 2000000));
            // stop Anon
            yield anon.stop();
        }
        catch (error) {
            console.error('Error:', error);
        }
    });
}
main();
